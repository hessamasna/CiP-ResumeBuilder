version: '3'

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
  front:
    container_name: front
    restart: on-failure
    build:
      context: ./resume-builder
    networks:
      default:
        aliases:
          - frontend
  user-service-db:
    container_name: user-service-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Re@901438
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5437:5432'
    networks:
      default:
        aliases:
          - user-service-db

  grafana-db:
    container_name: grafana-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Re@901438
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5436:5432'
    networks:
      default:
        aliases:
          - grafana-db

  grafana:
    restart: on-failure
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
      - grafana-db
    ports:
      - '3030:3000'
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_ANONYMOUS_ORG_NAME: "Main Org."
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: grafana-db
      GF_DATABASE_PORT: 5432
      GF_DATABASE_USER: postgres
      GF_DATABASE_PASSWORD: Re@901438
      GF_DATABASE_NAME: postgres
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      default:
        aliases:
          - grafana

  app:
    restart: on-failure
    build:
      context: ./userService
      dockerfile: Dockerfile
    container_name: app
    ports:
      - '3000:3000'
    depends_on:
      - user-service-db
    env_file:
      - ./userService/.env
    volumes:
      - ./userService/app/migrations:/app/migrations
    networks:
      default:
        aliases:
          - app

  nginx:
    image: nginx
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9050:9050"
    depends_on:
      - app
      - grafana
      - prometheus
    networks:
      default:
        aliases:
          - nginx
